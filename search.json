[{"title":"WebStorm 快捷键（mac版）整理","url":"https://weily22.github.io/2018/01/05/WebStorm-快捷键（mac版）整理/","content":"<p>之前一直以来都是用的sublime，现在改用WebStorm，感受到了它的强大。以下是积累的快捷键。</p>\n<figure class=\"highlight livecodeserver\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">command</span> + <span class=\"title\">d</span>                            复制上一行代码</span><br><span class=\"line\"></span><br><span class=\"line\">control + g                            查找当前选中的名字 类似sublime中的 ctrl + d</span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"keyword\">command</span> + <span class=\"title\">shift</span> + <span class=\"title\">Up</span>/<span class=\"title\">Down</span>              代码向上/下移动</span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"keyword\">command</span> + <span class=\"title\">f</span>                            在当前文件中查找</span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"keyword\">command</span> + /                            注释</span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"keyword\">command</span> + <span class=\"title\">e</span>                            打开最近打开的文件或项目</span><br><span class=\"line\">  </span><br><span class=\"line\">shift + enter                          不管光标在哪里都直接跳转至下一行</span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"keyword\">command</span> + <span class=\"title\">f12</span>                          显示当前文件结构</span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"keyword\">command</span> + <span class=\"title\">x</span>                            删除当前行</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">command</span> + <span class=\"title\">shift</span> + <span class=\"title\">u</span>                    切换大小写</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">command</span> + <span class=\"title\">b</span>                            跳转到变量声明处</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">command</span> + <span class=\"title\">w</span>                            关闭当前文件</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">command</span> + &lt; 或 &gt;                       光标位置跳转到当前行最左或最右</span><br><span class=\"line\">……</span><br></pre></td></tr></table></figure>\n","categories":[],"tags":[]},{"title":"javascript的变量、作用域、this","url":"https://weily22.github.io/2017/12/11/javascript的作用域/","content":"<ul>\n<li><a href=\"#var\">变量</a></li>\n<li><a href=\"#scope\">作用域</a></li>\n<li><a href=\"#this\">this</a><br><span id=\"var\" style=\"color:#009688\">++++++++++++++</span><br><h3 style=\"margin-bottom:-10px;\">变量声明</h3><br>在JavaScript中变量声明有两种方式：<code>one:  显示声明</code> <code>two:  隐式声明</code><br>显示声明一般指用关键字var进行的声明语句。例如：</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 声明变量</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> h = <span class=\"string\">'hello'</span>;</span><br><span class=\"line\"><span class=\"comment\">// 声明变量k</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> k <span class=\"keyword\">in</span> obj) &#123;...&#125;;</span><br><span class=\"line\"><span class=\"comment\">// 声明函数变量foo</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>) </span>&#123;...&#125;</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<p>而隐式声明常发生在不使用关键字var的赋值语句中。如：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">w = <span class=\"string\">'world'</span>;</span><br></pre></td></tr></table></figure></p>\n<p>变量是先执行声明，再进行赋值的，如果一个变量已经声明了则直接赋值。变量的值的类型包含：基本类型和引用类型。基本类型的值的复制，会在变量对象上创建一个新值，然后把该值复制到为新变量分配的位置上；引用类型的值的复制，复制的是该对象的一个指针，并且引用同一个对象。<br>基本数据类型包含（undefined, null, boolean, number, string, symbol(es6)）<br>下面是一个基本数据类型传参和引用类型传参的例子：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 按值访问变量</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> h = <span class=\"string\">'hello'</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">changeVal</span> (<span class=\"params\">val</span>) </span>&#123;</span><br><span class=\"line\">    val = <span class=\"string\">'change'</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> val</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(changeVal(h)) <span class=\"comment\">// \"change\"</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(h) <span class=\"comment\">// \"hello\"</span></span><br><span class=\"line\"><span class=\"comment\">// 按引用访问变量</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;<span class=\"attr\">name</span>: <span class=\"string\">'me'</span>&#125;;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">changeobj</span> (<span class=\"params\">obj</span>) </span>&#123;</span><br><span class=\"line\">    obj.name = <span class=\"string\">'you'</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(obj); <span class=\"comment\">// &#123;name: \"you\"&#125;</span></span><br></pre></td></tr></table></figure></p>\n<p><b>变量的检测方式</b>：基本类型检测使用 <code>typeof</code> ，返回结果如下：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typeof</span> <span class=\"string\">'str'</span>;  <span class=\"comment\">// \"string\"</span></span><br><span class=\"line\"><span class=\"keyword\">typeof</span> <span class=\"number\">22</span>; <span class=\"comment\">// \"number\"</span></span><br><span class=\"line\"><span class=\"keyword\">typeof</span> <span class=\"literal\">false</span>; <span class=\"comment\">// \"boolean\"</span></span><br><span class=\"line\"><span class=\"keyword\">typeof</span> a; <span class=\"comment\">// \"undefined\"</span></span><br></pre></td></tr></table></figure></p>\n<p>引用类型检测：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;&#125;;</span><br><span class=\"line\">obj <span class=\"keyword\">instanceof</span> <span class=\"built_in\">Object</span>     <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"built_in\">Object</span>.prototype.toString.call(&#123;&#125;) <span class=\"comment\">// \"[object Object]\"</span></span><br><span class=\"line\"><span class=\"built_in\">Object</span>.prototype.toString.call([]) <span class=\"comment\">// \"[object Array]\"</span></span><br></pre></td></tr></table></figure></p>\n<p><span id=\"scope\" style=\"color:#009688\">++++++++++++++</span>       </p>\n<p></p><h2 style=\"margin-bottom:-10px;\">作用域</h2><p></p>\n<ul>\n<li>JavaScript不存在块级作用域</li>\n<li>JavaScript采用函数作用域</li>\n<li>JavaScript的作用域链</li>\n<li>声明提前<br>在编程语言中，作用域控制着变量与参数的可见性及生命周期。JavaScript不存在块级作用域（除es6中引入了let关键字，用于指定变量属于块级作用域），但它有<i style=\"color:#ff5252;\">函数作用域</i>（也就是说，在函数内定义的变量在函数外是不可见的)。作用域的好处就是内部函数可以访问定义它们的外部函数的参数和变量（除了this和arguments）。由于JavaScript中的每个函数作为一个作用域链，如果出现函数嵌套函数，就会出现作用域链。<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> name = <span class=\"string\">'xiaom'</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">changeName</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> anothername = <span class=\"string\">'baby'</span>;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(name)   <span class=\"comment\">// xiaom  局部的作用域能访问全局作用域</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(anothername) <span class=\"comment\">// ReferenceError: anothername is not defined</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><i style=\"color:#ff5252;\">利用闭包突破作用域链</i></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * who函数有一个局部变量 myname,该变量对于changName和getName是可用的，它在全局空间是不可见的。</span></span><br><span class=\"line\"><span class=\"comment\"> * 如果一个函数需要在其父级作用域返回之后留住对父级作用域的链接的话，就必须要为此建立一个闭包</span></span><br><span class=\"line\"><span class=\"comment\"> * */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">who</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> myname = <span class=\"string\">'wly'</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">        changeName: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">            myname = <span class=\"string\">'weily'</span>;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> myname</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        getName: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> myname</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(myname);  <span class=\"comment\">//ReferenceError: myname is not defined</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> n = who();</span><br><span class=\"line\">n.getName();  <span class=\"comment\">// \"wly\"</span></span><br><span class=\"line\">n.changeName()  <span class=\"comment\">// \"weily\"</span></span><br></pre></td></tr></table></figure>\n<p>我们都知道，js的执行顺序，是从上到下，从左到右，一行一行执行的。但在执行之前，会先将变量和函数的声明移到所在函数作用域的顶部，赋值仍然保留在原位置，函数声明会将函数名称和函数体都提前。<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 变量c会提升至顶部，未初始化时的值为undefined</span></span><br><span class=\"line\"><span class=\"comment\"> **/</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(c); <span class=\"comment\">// undefined</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> c = <span class=\"string\">'computer'</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(c)  <span class=\"comment\">// 'computer'</span></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * let</span></span><br><span class=\"line\"><span class=\"comment\"> * let 变量会被提升到代码块的顶部，如果在声明前访问该变量，js会抛出异常</span></span><br><span class=\"line\"><span class=\"comment\"> * const 常量提升同let</span></span><br><span class=\"line\"><span class=\"comment\"> **/</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(a)  <span class=\"comment\">// ReferenceError: a is not defined</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> a = <span class=\"string\">'application'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 函数声明提升</span></span><br><span class=\"line\"><span class=\"comment\"> * 函数声明会将函数名称和函数体都提前,而赋值仍然保留在原位置,所以name='wly'</span></span><br><span class=\"line\"><span class=\"comment\"> **/</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> name = <span class=\"string\">'wly'</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">name</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'weily'</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(name) <span class=\"comment\">// 'wly'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 因为未在var声明语句中给b变量指定初始值，所以给b存入function b()&#123;return 1&#125;的值</span></span><br><span class=\"line\"><span class=\"comment\"> **/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">b</span>(<span class=\"params\"></span>) </span>&#123;<span class=\"keyword\">return</span> <span class=\"number\">1</span>&#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> b;</span><br><span class=\"line\">b(); <span class=\"comment\">// 1</span></span><br></pre></td></tr></table></figure></p>\n<p><span id=\"this\" style=\"color:#009688\">++++++++++++++</span>       </p>\n<p></p><h2 style=\"margin-bottom:-10px;\">This</h2><br>全局环境中this的指向：<br><b style=\"color:#004d40\">浏览器下：</b><br><img src=\"https://raw.githubusercontent.com/weily22/BlogImgs/master/2017-12-11/this-windows.png\" alt=\"this-windows\"><br><b style=\"color:#004d40\">node环境下：指向<code>global</code></b><p></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">* 纯粹的在函数中执行：</span></span><br><span class=\"line\"><span class=\"comment\">* this指向全局对象</span></span><br><span class=\"line\"><span class=\"comment\">**/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">test</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>) <span class=\"comment\">// window</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 作为对象的方法调用</span></span><br><span class=\"line\"><span class=\"comment\"> * this指向当前的这个对象</span></span><br><span class=\"line\"><span class=\"comment\"> **/</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;</span><br><span class=\"line\">    name: <span class=\"string\">'wly'</span>,</span><br><span class=\"line\">    test: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>.name)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">obj.test() <span class=\"comment\">// 'wly'</span></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 作为一个构造函数使用</span></span><br><span class=\"line\"><span class=\"comment\"> * this指向构造函数实例化的对象</span></span><br><span class=\"line\"><span class=\"comment\"> **/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Person</span> (<span class=\"params\">name</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>) <span class=\"comment\">// Person &#123;name: \"ly\"&#125;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> my = <span class=\"keyword\">new</span> Person(<span class=\"string\">'ly'</span>)</span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 箭头函数</span></span><br><span class=\"line\"><span class=\"comment\"> * 箭头函数中的this只和定义它时候的作用域的this有关</span></span><br><span class=\"line\"><span class=\"comment\"> **/</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;</span><br><span class=\"line\">    name: <span class=\"string\">'wly'</span>,</span><br><span class=\"line\">    foo: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>) <span class=\"comment\">// &#123;name: \"wly\", foo: ƒ&#125;</span></span><br><span class=\"line\">        setTimeout(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">'=&gt;'</span>, <span class=\"keyword\">this</span>) <span class=\"comment\">// =&gt; &#123;name: \"wly\", foo: ƒ&#125;</span></span><br><span class=\"line\">        &#125;, <span class=\"number\">1000</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">obj.foo()</span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * call, apply 其第一个参数都为指定执行函数中this的上下文</span></span><br><span class=\"line\"><span class=\"comment\"> * call第二参数是参数列表，apply第二参数是数组</span></span><br><span class=\"line\"><span class=\"comment\"> * 该改变this指向的方法不适用与箭头函数</span></span><br><span class=\"line\"><span class=\"comment\"> **/</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;<span class=\"attr\">name</span>: <span class=\"string\">'wly'</span>&#125;;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">foo.call(obj); <span class=\"comment\">// &#123;name: \"wly\"&#125;</span></span><br><span class=\"line\"><span class=\"comment\">// 对于箭头函数</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> bar = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> objbar = &#123;<span class=\"attr\">name</span>: <span class=\"string\">'bar'</span>&#125;;</span><br><span class=\"line\">bar.call(objbar)   <span class=\"comment\">// window</span></span><br></pre></td></tr></table></figure>\n","categories":[],"tags":["javascript"]},{"title":"css水平垂直居中笔记","url":"https://weily22.github.io/2017/12/03/css中水平垂直居中笔记/","content":"<p>众所周知，如果不给一个元素添加固定高度，那么它就会自动适应其内容的高度。<br>怎么让宽度也具有类似行为？<br><span style=\"color:#f00;\"><b>example:</b> 想要达到的一个效果为图片和外部盒子（box）居中于fatherBox,并且box宽度自适应于图片。</span></p>\n<p><div style=\"font-size:12px;border:1px solid #FFBB76;border-radius:3px;color: #DB7C22;box-shadow: 0 0 3px #ddd;background-color: #FFFCEF;padding: 6px 10px 5px;\">tip：平常写代码时会遇到这样一个问题，如果div里嵌套一个img元素且div的高度是由img的高度来撑开的，那么div的高度总会比img的高度多几个px.<br>解决办法：给 img 加一个 display:block;<div></div></div></p>\n<a id=\"more\"></a>\n<p><b style=\"font-size:1.2rem;\">布局效果预览：</b></p>\n<iframe src=\"/css-hvc/\" width=\"100%\" height=\"400\" style=\"border-radius: .2em;box-shadow: 10px 10px 5px #999;border:none;\"></iframe>\n\n<p><b>查看完整代码请点<a href=\"https://github.com/weily22/css-layout\" target=\"_blank\" rel=\"noopener\">这里</a></b></p>\n<p>页面基本布局：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"fatherBox\"</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"box base\"</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"./imgs/wolf.jpg\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"\"</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span> </span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"position-定位方案\"><a href=\"#position-定位方案\" class=\"headerlink\" title=\"position 定位方案\"></a>position 定位方案</h3><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* case1 */</span></span><br><span class=\"line\"><span class=\"selector-class\">.box</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">    <span class=\"attribute\">top</span>:<span class=\"number\">50%</span>;<span class=\"attribute\">left</span>:<span class=\"number\">50%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">transform</span>:<span class=\"built_in\">translate</span>(-50%, -50%);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/* case2 需要指定宽高 */</span></span><br><span class=\"line\"><span class=\"selector-class\">.box</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>:<span class=\"number\">200px</span>;<span class=\"attribute\">height</span>:<span class=\"number\">200px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">    <span class=\"attribute\">top</span>:<span class=\"number\">50%</span>;<span class=\"attribute\">left</span>:<span class=\"number\">50%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">margin</span>:-<span class=\"number\">100px</span> <span class=\"number\">0</span> <span class=\"number\">0</span> -<span class=\"number\">100px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/* case3 需要指定宽高 */</span></span><br><span class=\"line\"><span class=\"selector-class\">.box</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>:<span class=\"number\">200px</span>;<span class=\"attribute\">height</span>:<span class=\"number\">200px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">    <span class=\"attribute\">top</span>: <span class=\"number\">0</span>; <span class=\"attribute\">left</span>: <span class=\"number\">0</span>; <span class=\"attribute\">bottom</span>: <span class=\"number\">0</span>; <span class=\"attribute\">right</span>: <span class=\"number\">0</span>; </span><br><span class=\"line\">    <span class=\"attribute\">margin</span>:auto;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"display-flex-方案\"><a href=\"#display-flex-方案\" class=\"headerlink\" title=\"display:flex 方案\"></a>display:flex 方案</h3><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* case4 */</span></span><br><span class=\"line\"><span class=\"selector-class\">.fatherBox</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.box</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">margin</span>:auto;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/* case5 */</span></span><br><span class=\"line\"><span class=\"selector-class\">.fatherBox</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">    <span class=\"attribute\">align-items</span>: center;</span><br><span class=\"line\">    <span class=\"attribute\">justify-content</span>: center;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"借助伪元素-方案\"><a href=\"#借助伪元素-方案\" class=\"headerlink\" title=\"借助伪元素 方案\"></a>借助伪元素 方案</h3><p>原理：利用inline-block的vertical-align:middle去对齐after伪元素，after伪元素的高度与父元素一样，从而实现了高度方向的对齐。<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* case6 *</span></span><br><span class=\"line\"><span class=\"comment\">/* 关于vertica-align生效场景：只有一个元素属于inline或是inline-block（table-cell也可以理解为inline-block水平）水平，其身上的vertical-align属性才会起作用。一些默认情况下起作用的元素：如，图片，按钮，单复选框 */</span></span><br><span class=\"line\"><span class=\"selector-class\">.fatherBox</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">text-align</span>: center;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.fatherBox</span><span class=\"selector-pseudo\">:after</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">content</span>:<span class=\"string\">\"\"</span>;</span><br><span class=\"line\">    <span class=\"attribute\">display</span>: inline-block;</span><br><span class=\"line\">    <span class=\"attribute\">vertical-align</span>: middle;</span><br><span class=\"line\">    <span class=\"attribute\">height</span>:<span class=\"number\">100%</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.box</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">vertical-align</span>: middle;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"line-height-方案\"><a href=\"#line-height-方案\" class=\"headerlink\" title=\"line-height 方案\"></a>line-height 方案</h3><p>line-height如果是百分比的话，是相对于字体大小的，so想要设置居中的话，就使用px<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* case7 */</span></span><br><span class=\"line\"><span class=\"selector-class\">.fatherBox</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: <span class=\"number\">#ccc</span>;</span><br><span class=\"line\">    <span class=\"attribute\">height</span>:<span class=\"number\">300px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">text-align</span>: center; </span><br><span class=\"line\">    <span class=\"attribute\">line-height</span>: <span class=\"number\">300px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.box</span>&#123;</span><br><span class=\"line\">   <span class=\"attribute\">display</span>: inline-block;</span><br><span class=\"line\">   <span class=\"attribute\">vertical-align</span>: middle;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n","categories":[],"tags":["css"]},{"title":"about","url":"https://weily22.github.io/about/index.html","content":"","categories":[],"tags":[]},{"title":"","url":"https://weily22.github.io/css/personal-style.css","content":"html.page-home {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-image: url('/images/de.jpg');\n    background-color: transparent;\n    background-size: cover;\n    background-position: center center;\n    background-repeat: no-repeat;\n}\n.content-home .slogan,\n.content-home .nav .item a{\n    color:#fff;\n    text-shadow: 0 1px 1px #8c8989;\n    font-size:17px;\n}\n.content-home .name{\n    text-shadow: 0 1px 1px #fff;\n}\n.content-home .nav .item a:hover{\n    color:#ff0;\n}\n.content-home .avatar img{\n    box-shadow: 0 0 28px 5px rgb(103, 139, 191);\n}\n","categories":[],"tags":[]},{"title":"category","url":"https://weily22.github.io/category/index.html","content":"","categories":[],"tags":[]},{"title":"link","url":"https://weily22.github.io/link/index.html","content":"","categories":[],"tags":[]},{"title":"","url":"https://weily22.github.io/css-hvc/index.css","content":"*{margin:0;padding:0;}\nhtml,body{\n    width:100%;\n    height:100%;\n    background-color: rgb(238, 225, 170);\n}\n.base{\n    background-color: #fff;\n    padding:20px;\n    display: inline-block;\n    position: relative;\n}\n.box img{\n    display: block;\n    width:100%;\n}\nbody::after,.fatherBox::before{\n    position: absolute;\n    font-size:1rem;\n    left:1rem;\n}\nbody::after{\n    content:\"body\";\n    color:#333;\n    bottom:1rem;\n}\n.fatherBox::before{\n    content:\".fatherBox\";\n    color:#fff;\n}\n.base:before{\n    position: absolute;\n    content:\".box\";\n    color: #f00;\n    left:2px;top:-58%;\n    font-size:12px;\n}\n/* ===========================case1================== */\n/* .fatherBox{\n    position: relative;\n    background-color: #ccc;\n    height:50%;\n}\n.box{\n    position: absolute;\n    top:50%;left:50%;\n    transform:translate(-50%, -50%);\n} */\n\n/* =============================case2=================== */\n/* .fatherBox{\n    position: relative;\n    background-color: #ccc;\n    height:50%;\n}\n.box{\n    width:200px;height:200px;\n    position: absolute;\n    top:50%;left:50%;\n    margin:-100px 0 0 -100px;\n} */\n/* =============================case3=================== */\n/* .fatherBox{\n    position: relative;\n    background-color: #ccc;\n    height:50%;\n}\n.box{\n    width:200px;height:200px;\n    position: absolute;\n    top: 0; left: 0; bottom: 0; right: 0; \n    margin:auto;\n} */\n/* ================================case4===================== */\n/* .fatherBox{\n    position: relative;\n    background-color: #ccc;\n    height:50%;\n    display: flex;\n}\n.box{\n    margin:auto;\n} */\n/* ================================case5===================== */\n/* .fatherBox{\n    position: relative;\n    background-color: #ccc;\n    height:50%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n} */\n/* ================================case6===================== */\n/* .fatherBox{\n    position: relative;\n    background-color: #ccc;\n    height:50%;\n    text-align: center; \n}\n.fatherBox:after{\n    content:\"\";\n    display: inline-block;\n    vertical-align: middle;\n    height:100%;\n}\n.box{\n    vertical-align: middle;\n} */\n/* ================================case7===================== */\n.fatherBox{\n    position: relative;\n    background-color: #ccc;\n    height:300px;\n    text-align: center; \n    line-height: 300px;\n}\n.box{\n   display: inline-block;\n   vertical-align: middle;\n}\n","categories":[],"tags":[]},{"title":"","url":"https://weily22.github.io/css-hvc/index.html","content":"<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <title>css 水平垂直居中</title>\n    <link rel=\"stylesheet\" href=\"index.css\">\n</head>\n<body>\n    <div class=\"fatherBox\">\n        <div class=\"box base\">\n            <img src=\"./imgs/wolf.jpg\" alt=\"\">\n        </div> \n    </div>\n</body>\n</html>","categories":[],"tags":[]},{"title":"search","url":"https://weily22.github.io/search/index.html","content":"","categories":[],"tags":[]},{"title":"tag","url":"https://weily22.github.io/tag/index.html","content":"","categories":[],"tags":[]},{"title":"project","url":"https://weily22.github.io/project/index.html","content":"","categories":[],"tags":[]},{"title":"","url":"https://weily22.github.io/weily/index.html","content":"<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <title>weily</title>\n</head>\n<body>\n    <h1>我的个人博客 待续</h1>\n</body>\n</html>","categories":[],"tags":[]}]